{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "CloudFormation template for a generic VPC with public and private subnets (with private network Internet access via NAT)",

	"Mappings": {
		"SubnetConfig": {
			"VPC": {
				"CIDR": "172.21.15.0/24"
			},
			"WebPublicSubnetA": {
				"CIDR": "172.21.15.0/27"
			},
			"WebPublicSubnetB": {
				"CIDR": "172.21.15.32/27"
			},
			"AppPublicSubnetA": {
				"CIDR": "172.21.15.64/27"
			},
			"AppPublicSubnetB": {
				"CIDR": "172.21.15.96/27"
			},
			"DBPrivateSubnetA": {
				"CIDR": "172.21.15.128/27"
			},
			"DBPrivateSubnetB": {
				"CIDR": "172.21.15.160/27"
			}
		},
		"VPCPeering": {
			"AcceptVPC": {
				"AVPC": "vpc-abcdfghjk"
			}
		},
		"PeerRoute": {
			"PeerRouteIP": {
				"CIDR": "10.x.0.0/16"
			},
			"VgwRouteIP": {
				"CIDR": "10.x.x.x/32" 
			},
			"VgwRouteIP01": {
				"CIDR": "10.x.x.x/32"
			}
			
		}
	},

	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "VPC", "CIDR"]
				},
				"EnableDnsSupport": true,
				"EnableDnsHostnames": true,
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-SG-UAT-VPC"
				}]
			}
		},

		"WebPublicSubnetA": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "WebPublicSubnetA", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-Public-1A-Web-UAT"
				}]
			}
		},

		"WebPublicSubnetB": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "WebPublicSubnetB", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-Public-1B-Web-UAT"
				}]
			}
		},

		"AppPublicSubnetA": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "AppPublicSubnetA", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-Public-1A-App-UAT"
				}]
			}
		},

		"AppPublicSubnetB": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "AppPublicSubnetB", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-Public-1B-App-UAT"
				}]
			}
		},

		"DBPrivateSubnetA": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "DBPrivateSubnetA", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Private"
				}, {
					"Key": "Name",
					"Value": "DG-Private-1A-DB-UAT"
				}]
			}
		},

		"DBPrivateSubnetB": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
						"Fn::GetAZs": {
							"Ref": "AWS::Region"
						}
					}]
				},
				"CidrBlock": {
					"Fn::FindInMap": ["SubnetConfig", "DBPrivateSubnetB", "CIDR"]
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DG-Private-1B-DB-UAT"
				}]
			}
		},

		"InternetGateway": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-UAT-IG"
				}]
			}
		},

		"GatewayToInternet": {
			"DependsOn": ["VPC", "InternetGateway"],
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicWebRouteTable": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DR-WEB-UAT-RT"
				}]
			}
		},

		"PublicRouteA": {
			"DependsOn": ["PublicWebRouteTable", "InternetGateway"],
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicWebRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicSubnetRemoteRouteTableAssociationA": {
			"DependsOn": ["WebPublicSubnetA", "PublicWebRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "WebPublicSubnetA"
				},
				"RouteTableId": {
					"Ref": "PublicWebRouteTable"
				}
			}
		},

		"PublicSubnetRemoteRouteTableAssociationB": {
			"DependsOn": ["WebPublicSubnetB", "PublicWebRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "WebPublicSubnetB"
				},
				"RouteTableId": {
					"Ref": "PublicWebRouteTable"
				}
			}
		},


		"PublicAppRouteTable": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Public"
				}, {
					"Key": "Name",
					"Value": "DG-APP-UAT-RT"
				}]
			}
		},

		"PublicRouteB": {
			"DependsOn": ["PublicAppRouteTable", "InternetGateway"],
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicAppRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicSubnetRouteTableAssociationA": {
			"DependsOn": ["AppPublicSubnetA", "PublicAppRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "AppPublicSubnetA"
				},
				"RouteTableId": {
					"Ref": "PublicAppRouteTable"
				}
			}
		},

		"PublicSubnetRouteTableAssociationB": {
			"DependsOn": ["AppPublicSubnetB", "PublicAppRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "AppPublicSubnetB"
				},
				"RouteTableId": {
					"Ref": "PublicAppRouteTable"
				}
			}
		},


		"PrivateDBRouteTable": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Application",
					"Value": {
						"Ref": "AWS::StackName"
					}
				}, {
					"Key": "Network",
					"Value": "Private"
				}, {
					"Key": "Name",
					"Value": "DR-DB-UAT-RT"
				}]
			}
		},

		"PrivateSubnetRouteTableAssociationA": {
			"DependsOn": ["DBPrivateSubnetA", "PrivateDBRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "DBPrivateSubnetA"
				},
				"RouteTableId": {
					"Ref": "PrivateDBRouteTable"
				}
			}
		},

		"PrivateSubnetRouteTableAssociationB": {
			"DependsOn": ["DBPrivateSubnetB", "PrivateDBRouteTable"],
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "DBPrivateSubnetB"
				},
				"RouteTableId": {
					"Ref": "PrivateDBRouteTable"
				}
			}
		},
		"WebNetworkAcl": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "DR-SG-UAT-WEB-NACL"
				}]
			}
		},
		"AppNetworkAcl": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "DR-SG-UAT-APP-NACL"
				}]
			}
		},
		"DBNetworkAcl": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "DR-SG-UAT-DB-NACL"
				}]
			}
		},
		"WebSubnetNetworkAclAssociation1A": {
			"DependsOn": ["VPC","WebNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "WebPublicSubnetA"
				},
				"NetworkAclId": {
					"Ref": "WebNetworkAcl"
				}
			}
		},
		"WebSubnetNetworkAclAssociation1B": {
			"DependsOn": ["VPC","WebNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "WebPublicSubnetB"
				},
				"NetworkAclId": {
					"Ref": "WebNetworkAcl"
				}
			}
		},
		"AppSubnetNetworkAclAssociation1A": {
			"DependsOn": ["VPC","AppNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "AppPublicSubnetA"
				},
				"NetworkAclId": {
					"Ref": "AppNetworkAcl"
				}
			}
		},
		"AppSubnetNetworkAclAssociation1B": {
			"DependsOn": ["VPC","AppNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "AppPublicSubnetB"
				},
				"NetworkAclId": {
					"Ref": "AppNetworkAcl"
				}
			}
		},
		"DBSubnetNetworkAclAssociation1A": {
			"DependsOn": ["VPC","DBNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "DBPrivateSubnetA"
				},
				"NetworkAclId": {
					"Ref": "DBNetworkAcl"
				}
			}
		},
		"DBSubnetNetworkAclAssociation1B": {
			"DependsOn": ["VPC","DBNetworkAcl"],
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "DBPrivateSubnetB"
				},
				"NetworkAclId": {
					"Ref": "DBNetworkAcl"
				}
			}
		},
		"WebNetworkAclEntryEgress": {
			"DependsOn": ["VPC","WebNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "WebNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"WebNetworkAclEntryIngress": {
			"DependsOn": ["VPC","WebNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "WebNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"AppNetworkAclEntryEgress": {
			"DependsOn": ["VPC","AppNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "AppNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"AppNetworkAclEntryIngress": {
			"DependsOn": ["VPC","AppNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "AppNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"DBNetworkAclEntryEgress": {
			"DependsOn": ["VPC","DBNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "DBNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"DBNetworkAclEntryIngress": {
			"DependsOn": ["VPC","DBNetworkAcl"],
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Ref": "DBNetworkAcl"
				},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0"
			}
		},
		"VPCPeeringConnection": {
			"DependsOn": ["VPC"],
			"Type": "AWS::EC2::VPCPeeringConnection",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"PeerVpcId": {
					"Fn::FindInMap": ["VPCPeering", "AcceptVPC", "AVPC"]
				},
				"Tags": [{
					"Key": "Name",
					"Value": "UAT - SIT"
				}]
			}
		},
		 "AppPeeringRoute1" : {
			"DependsOn": ["VPCPeeringConnection","PublicAppRouteTable"],
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock": {
					"Fn::FindInMap": ["PeerRoute", "PeerRouteIP", "CIDR"]
				},
                "RouteTableId" : { "Ref" : "PublicAppRouteTable" },
                "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
            }
        },
		 "WebPeeringRoute1" : {
			"DependsOn": ["VPCPeeringConnection","PublicWebRouteTable"],
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock": {
					"Fn::FindInMap": ["PeerRoute", "PeerRouteIP", "CIDR"]
				},
                "RouteTableId" : { "Ref" : "PublicWebRouteTable" },
                "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
            }
        },
		 "DBPeeringRoute1" : {
			"DependsOn": ["VPCPeeringConnection","PrivateDBRouteTable"],
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock": {
					"Fn::FindInMap": ["PeerRoute", "PeerRouteIP", "CIDR"]
				},
                "RouteTableId" : { "Ref" : "PrivateDBRouteTable" },
                "VpcPeeringConnectionId" : { "Ref" : "VPCPeeringConnection" }
            }
        },
		"VPNGateway": {
			"Type": "AWS::EC2::VPNGateway",
			"Properties": {
				"Type": "ipsec.1",
				"Tags": [{
					"Key": "Name",
					"Value": "DR-VPG-UAT"
				}]
			}
		},
		"AttachVpnGateway": {
			"DependsOn": ["VPC","VPNGateway"],
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"VpnGatewayId": {
					"Ref": "VPNGateway"
				}
			}
		},
		"VgwRoute" : {
			"DependsOn": ["VPC","VPNGateway","PublicAppRouteTable"],
			"Type" : "AWS::EC2::Route",         
			"Properties" : {
				"RouteTableId" : { "Ref" : "PublicAppRouteTable" },
				"DestinationCidrBlock" : { "Fn::FindInMap": ["PeerRoute", "VgwRouteIP", "CIDR"] },
				"GatewayId" : { "Ref" : "VPNGateway" }
         }
      },
	  		      "VgwRoute01" : {
				  "DependsOn": ["VPC","VPNGateway","PublicAppRouteTable"],
         "Type" : "AWS::EC2::Route",         
         "Properties" : {
            "RouteTableId" : { "Ref" : "PublicAppRouteTable" },
            "DestinationCidrBlock" : { "Fn::FindInMap": ["PeerRoute", "VgwRouteIP01", "CIDR"] },
            "GatewayId" : { "Ref" : "VPNGateway" }
         }
      }
   

	},

	"Outputs": {
		"VpcId": {
			"Value": {
				"Ref": "VPC"
			},
			"Description": "VPC ID of newly created VPC"
		},

		"WebPublicSubnetA": {
			"Value": {
				"Ref": "WebPublicSubnetA"
			},
			"Description": "Public Subnet in AZ A"
		},

		"WebPublicSubnetB": {
			"Value": {
				"Ref": "WebPublicSubnetB"
			},
			"Description": "Public Subnet in AZ B"
		},

		"AppPublicSubnetA": {
			"Value": {
				"Ref": "AppPublicSubnetA"
			},
			"Description": "Public App Subnet in AZ A"
		},
		"AppPublicSubnetB": {
			"Value": {
				"Ref": "AppPublicSubnetB"
			},
			"Description": "Public App Subnet in AZ B"
		},
		"DBPrivateSubnetA": {
			"Value": {
				"Ref": "DBPrivateSubnetA"
			},
			"Description": "Private DB Subnet in AZ A"
		},
		"DBPrivateSubnetB": {
			"Value": {
				"Ref": "DBPrivateSubnetB"
			},
			"Description": "Private Db Subnet in AZ B"
		}

	}
}
